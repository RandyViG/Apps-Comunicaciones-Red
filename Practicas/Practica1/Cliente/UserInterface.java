import java.io.DataInputStream;
import java.io.DataOutputStream;
import javax.swing.JTree;
import java.net.Socket;
import java.io.ObjectInputStream;
import javax.swing.JFileChooser;
import javax.swing.JScrollPane;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeSelectionModel;

public class UserInterface extends javax.swing.JFrame {
    String selectedPath;
    String host = "localhost";
    int pto = 1239;
    JTree jt;
    
    public UserInterface() {
        initComponents();
        Client cliente = new Client(host,pto);
        Directory dir = cliente.receiveDirectory();
        JTree jt = dir.getDirectory();
        jt.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        //jt.addTreeSelectionListener(this.jTree1);
        
        jScrollPane1.setViewportView(jt);
        jScrollPane1.updateUI();
    } 
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        upload = new javax.swing.JButton();
        createDirectory = new javax.swing.JButton();
        deleteFile = new javax.swing.JButton();
        download = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(196, 216, 246));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        upload.setText("Subir Archivo");
        upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadActionPerformed(evt);
            }
        });

        createDirectory.setText("Crear Carpeta");
        createDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDirectoryActionPerformed(evt);
            }
        });

        deleteFile.setText("Borrar Archivo");
        deleteFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFileActionPerformed(evt);
            }
        });

        download.setText("Descargar");
        download.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Drive Escom");

        jTree1.setEditable(true);
        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree1MouseClicked(evt);
            }
        });
        jTree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTree1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jTree1);   

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteFile, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(upload, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(download, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(upload)
                        .addGap(44, 44, 44)
                        .addComponent(createDirectory)
                        .addGap(38, 38, 38)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(deleteFile)
                        .addGap(47, 47, 47)
                        .addComponent(download)
                        .addGap(69, 69, 69))))
        );

        pack();
    }// </editor-fold>                        

    private void uploadActionPerformed(java.awt.event.ActionEvent evt) {                                       
        Client cliente = new Client(host,pto);
        cliente.sendAction(1);
        String inDir = jTextField1.getText();
        if ( inDir == null )
            inDir = "/";
        else
            inDir = "/" + inDir;
        cliente.sendDir(inDir);
        cliente.uploadFile();
        Directory dir = cliente.receiveDirectory();
        JTree jt = dir.getDirectory();
        jScrollPane1.setViewportView(jt);
        jScrollPane1.updateUI();
        jTextField1.setText("");
        
    }                                      

    private void deleteFileActionPerformed(java.awt.event.ActionEvent evt) {                                           
        Client cliente = new Client(host,pto);
        String nameFile = jTextField1.getText();
        if(!(nameFile == null)){
            cliente.sendAction(3);
            System.out.println(nameFile);
            System.out.println("Mandando archivo para borrar");
            cliente.sendDir(nameFile);
            Directory dir = cliente.receiveDirectory();
            JTree jt = dir.getDirectory();
            jScrollPane1.setViewportView(jt);
            jScrollPane1.updateUI();
            jTextField1.setText("");
        }
        else
            System.out.println("Error, Ingresa el nombre del archivo");
        
    }                                          

    private void createDirectoryActionPerformed(java.awt.event.ActionEvent evt) {                                                
        Client cliente = new Client(host,pto);
        String nameDir = jTextField1.getText();
        if ( ! (nameDir == null) ){
            cliente.sendAction(2);
            cliente.sendDir(nameDir);
            Directory dir = cliente.receiveDirectory();
            JTree jt = dir.getDirectory();
            jScrollPane1.setViewportView(jt);
            jScrollPane1.updateUI();
            jTextField1.setText("");
        }
        else
            System.out.println("Error, ingrese el nombre del directorio"); 
    }                                               

    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {                                    
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) jt.getSelectionPath().getLastPathComponent();
        jTextField1.setText(selectedNode.getUserObject().toString());
        selectedPath = selectedNode.getUserObject().toString();
        System.out.println(selectedPath);
    }                                   

    private void formWindowClosed(java.awt.event.WindowEvent evt) {                                  
        Client cliente = new Client(host,pto);
        cliente.sendAction(5);
    }                                 

    private void jTree1ValueChanged(javax.swing.event.TreeSelectionEvent evt) {                                    
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) jt.getSelectionPath().getLastPathComponent();
        jTextField1.setText(selectedNode.getUserObject().toString());
        selectedPath = selectedNode.getUserObject().toString();
        System.out.println(selectedPath);
    }                                   

    private void downloadActionPerformed(java.awt.event.ActionEvent evt) {                                         
        Client cliente = new Client(host,pto);
        String nameFile = jTextField1.getText();
        if ( !(nameFile == null) ){
            System.out.println("Mandando accion");
            cliente.sendAction(4);
            System.out.println("Mandando Name");
            cliente.sendDir(nameFile);
            System.out.println("Reciviendo Archivo");
            cliente.reciveFile();
            System.out.println("Recibiendo direc");
            Directory dir = cliente.receiveDirectory();
            JTree jt = dir.getDirectory();
            jScrollPane1.setViewportView(jt);
            jScrollPane1.updateUI();
            jTextField1.setText("");
        }
        else
            System.out.println("Error, ingrese el nombre del archivo a descargar");
    }                                                                              
        
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserInterface().setVisible(true);
            }
        }
        );
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton createDirectory;
    private javax.swing.JButton deleteFile;
    private javax.swing.JButton download;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTree jTree1;
    private javax.swing.JButton upload;
    // End of variables declaration                   
}
